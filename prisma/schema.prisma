generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model roles {
  id                Int                 @id @default(autoincrement())
  role_name         String              @unique
  access_department access_department[]
  access_menu       access_menu[]
  user              user[]
}

model user {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  password   String
  name       String?
  createdAt  DateTime? @db.DateTime(0)
  rolesId    Int?
  session    session[]
  roles      roles?    @relation(fields: [rolesId], references: [id])
  pegawai_id Int?
  pegawai    pegawai?  @relation(fields: [pegawai_id], references: [id])
}

model menu_group {
  id         Int     @id @default(autoincrement())
  menu_group String  @unique
  urut       Int?
  group      Int?
  parent_id  String?
  menu       menu[]
}

model menu {
  id            Int           @id @default(autoincrement())
  menu          String?
  path          String?
  urut          Int?
  menu_group_id Int?
  access_menu   access_menu[]
  menu_group    menu_group?   @relation(fields: [menu_group_id], references: [id])
}

model access_menu {
  id      Int     @id @default(autoincrement())
  menu_id Int?
  action  String?
  role_id Int
  menu    menu?   @relation(fields: [menu_id], references: [id])
  roles   roles   @relation(fields: [role_id], references: [id])

  @@unique([menu_id, role_id])
}

model access_department {
  id            Int        @id @default(autoincrement())
  role_id       Int
  department_id Int
  department    department @relation(fields: [department_id], references: [id])
  roles         roles      @relation(fields: [role_id], references: [id])
}

model session {
  id        Int       @id @default(autoincrement())
  token     String    @unique @db.VarChar(500)
  user_id   Int
  createdAt DateTime? @db.DateTime(0)
  expiredAt DateTime? @db.DateTime(0)
  expired   Boolean   @default(false)
  user      user      @relation(fields: [user_id], references: [id])

  @@unique([user_id, token])
}

model department {
  id                Int                 @id @default(autoincrement())
  nama_department   String
  lot               String?
  latitude          String?
  longitude         String?
  radius            String?
  access_department access_department[]
  pegawai           pegawai[]
  shift             shift[]
  sub_department    sub_department[]
}

model sub_department {
  id                  Int        @id @default(autoincrement())
  nama_sub_department String
  department_id       Int
  pegawai             pegawai[]
  department          department @relation(fields: [department_id], references: [id])
}

model pegawai {
  id                Int             @id @default(autoincrement())
  panji_id          String?
  nama              String
  nik_ktp           String
  tmp_lahir         String?
  tgl_lahir         DateTime?       @db.Date
  jk                String
  agama             String?
  kebangsaan        String?
  alamat            String?
  rt                String?
  rw                String?
  kel               String?
  kec               String?
  kota              String?
  telp              String?
  status_nikah      String
  tgl_join          DateTime?       @db.Date
  tgl_selesai       DateTime?       @db.Date
  tgl_reset         DateTime?       @db.Date
  email             String?
  position          String?
  npwp              String?
  jenis_bank        String?
  no_rek            String?
  bpjs_tk           String?
  bpjs_kes          String?
  department_id     Int?
  sub_department_id Int?
  is_active         Boolean         @default(true)
  is_overtime       Boolean         @default(false)
  department        department?     @relation(fields: [department_id], references: [id])
  sub_department    sub_department? @relation(fields: [sub_department_id], references: [id])
  shift_id          Int?
  shift             shift?          @relation(fields: [shift_id], references: [id])
  absen             absen[]
  user              user[]
}

model shift {
  id            Int        @id @default(autoincrement())
  jam_masuk     DateTime?  @db.Time(0)
  jam_pulang    DateTime?  @db.Time(0)
  different_day Boolean    @default(false)
  department_id Int
  keterangan    String?
  cond_friday   Int        @default(0)
  department    department @relation(fields: [department_id], references: [id])
  pegawai       pegawai[]
  absen         absen[]
}

model absen {
  id           Int       @id @default(autoincrement())
  pegawai_id   Int
  pengawai     pegawai   @relation(fields: [pegawai_id], references: [id])
  tanggal      DateTime? @db.Date()
  absen_masuk  DateTime? @db.Time(0)
  absen_pulang DateTime? @db.Time(0)
  shift_id     Int
  shift        shift     @relation(fields: [shift_id], references: [id])
  late         Int?      @default(0)
  early        Int?      @default(0)
  bulan        Int
  tahun        Int
  latitude     String?
  longitude    String?
  ket_masuk    String?
  ket_pulang   String?
  is_manual    Boolean   @default(false)
}
